version: "3"

services:

    flask:
        build: 
            context: ./flask-docker/
        container_name: flask
        volumes: 
            - ./flask-docker:/flask-docker
        ports: 
            - "5000:5000"
        networks:
            zain-network:
                ipv4_address: 172.25.0.9

    mongodb:
        image: mongo:latest
        container_name: mongodb
        volumes: 
            - ./mongodb-docker:/data/db
        ports: 
            - "27017:27017"
        networks:
            zain-network:
                ipv4_address: 172.25.0.10
            
    zookeeper:
        image: wurstmeister/zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        #volumes:
        #    - ./zookeeper-docker/data:/opt/zookeeper-3.4.13/data
        networks:
            zain-network:
                ipv4_address: 172.25.0.11
            
    kafka:
        image: wurstmeister/kafka
        container_name: kafka
        ports:
            - "9092:9092"
        expose:
            - "9093"
        volumes:
            - ./kafka-docker/logs:/opt/kafka_2.13-2.8.1/logs
            # - ./kafka-docker/python-code:/python-code
        environment:            
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        depends_on: 
            - "zookeeper"
        networks:
            zain-network:
                ipv4_address: 172.25.0.12
    
    spark-master:
        image: docker.io/bitnami/spark:3
        container_name: spark-master
        environment:
          - SPARK_MODE=master
          - SPARK_RPC_AUTHENTICATION_ENABLED=no
          - SPARK_RPC_ENCRYPTION_ENABLED=no
          - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
          - SPARK_SSL_ENABLED=no
        ports:
          - '8080:8080'
        networks:
            zain-network:
                ipv4_address: 172.25.0.13
                
    spark-worker-1:
        image: docker.io/bitnami/spark:3
        container_name: spark-worker-1
        environment:
          - SPARK_MODE=worker
          - SPARK_MASTER_URL=spark://spark-master:7077
          - SPARK_WORKER_MEMORY=1G
          - SPARK_WORKER_CORES=1
          - SPARK_RPC_AUTHENTICATION_ENABLED=no
          - SPARK_RPC_ENCRYPTION_ENABLED=no
          - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
          - SPARK_SSL_ENABLED=no
        networks:
            zain-network:
                ipv4_address: 172.25.0.14
          
    spark-worker-2:
        image: docker.io/bitnami/spark:3
        container_name: spark-worker-2
        environment:
          - SPARK_MODE=worker
          - SPARK_MASTER_URL=spark://spark-master:7077
          - SPARK_WORKER_MEMORY=1G
          - SPARK_WORKER_CORES=1
          - SPARK_RPC_AUTHENTICATION_ENABLED=no
          - SPARK_RPC_ENCRYPTION_ENABLED=no
          - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
          - SPARK_SSL_ENABLED=no
        networks:
            zain-network:
                ipv4_address: 172.25.0.15    
    bokeh:
        # image: lukauskas/bokeh:latest 
        build: 
            context: ./bokeh-docker/
        container_name: bokeh
        ports:
          - "5006:5006"
        volumes:
          - ./bokeh-docker:/bokeh-docker
        depends_on:
          - flask
        networks:
            zain-network:
                ipv4_address: 172.25.0.8
        
         
networks:
    zain-network:
        name: zain-network
        driver: bridge
        ipam:
          driver: default
          config:
            - subnet: 172.25.0.0/16
              gateway: 172.25.0.1